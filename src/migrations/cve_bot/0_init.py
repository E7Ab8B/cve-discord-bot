from tortoise import BaseDBAsyncClient


async def upgrade(db: BaseDBAsyncClient) -> str:
    return """
        CREATE TABLE IF NOT EXISTS "cve" (
    "id" SERIAL NOT NULL PRIMARY KEY,
    "cve_id" VARCHAR(20) NOT NULL UNIQUE,
    "published" TIMESTAMPTZ NOT NULL,
    "notified" BOOL NOT NULL  DEFAULT False,
    "updated" TIMESTAMPTZ NOT NULL  DEFAULT CURRENT_TIMESTAMP,
    "created" TIMESTAMPTZ NOT NULL  DEFAULT CURRENT_TIMESTAMP
);
CREATE INDEX IF NOT EXISTS "idx_cve_cve_id_b44c51" ON "cve" ("cve_id");
CREATE TABLE IF NOT EXISTS "notificationchannel" (
    "id" SERIAL NOT NULL PRIMARY KEY,
    "channel_id" BIGINT NOT NULL UNIQUE,
    "guild_id" BIGINT NOT NULL,
    "updated" TIMESTAMPTZ NOT NULL  DEFAULT CURRENT_TIMESTAMP,
    "created" TIMESTAMPTZ NOT NULL  DEFAULT CURRENT_TIMESTAMP
);
CREATE INDEX IF NOT EXISTS "idx_notificatio_channel_dd72bc" ON "notificationchannel" ("channel_id");
CREATE INDEX IF NOT EXISTS "idx_notificatio_guild_i_57f74e" ON "notificationchannel" ("guild_id");
CREATE TABLE IF NOT EXISTS "label" (
    "id" SERIAL NOT NULL PRIMARY KEY,
    "name" VARCHAR(20) NOT NULL UNIQUE,
    "keywords" varchar[] NOT NULL,
    "updated" TIMESTAMPTZ NOT NULL  DEFAULT CURRENT_TIMESTAMP,
    "created" TIMESTAMPTZ NOT NULL  DEFAULT CURRENT_TIMESTAMP
);
CREATE INDEX IF NOT EXISTS "idx_label_name_a7b9a6" ON "label" ("name");
CREATE TABLE IF NOT EXISTS "aerich" (
    "id" SERIAL NOT NULL PRIMARY KEY,
    "version" VARCHAR(255) NOT NULL,
    "app" VARCHAR(100) NOT NULL,
    "content" JSONB NOT NULL
);
CREATE TABLE IF NOT EXISTS "notificationchannel_label" (
    "notificationchannel_id" INT NOT NULL REFERENCES "notificationchannel" ("id") ON DELETE CASCADE,
    "label_id" INT NOT NULL REFERENCES "label" ("id") ON DELETE CASCADE
);

-- Creating label All, which should exist in the DB.
INSERT INTO public.label (id, name, keywords, updated, created)
VALUES (DEFAULT, 'All', '{}', DEFAULT, DEFAULT);"""


async def downgrade(db: BaseDBAsyncClient) -> str:
    return """
        """
